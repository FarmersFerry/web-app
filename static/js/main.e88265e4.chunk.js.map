{"version":3,"sources":["Components/Price/Price.js","Services/GooseCornTripBuilder.js","Components/Trip/Trip.js","Services/Scarecrow.js","Services/TripCalculator.js","App.js","serviceWorker.js","index.js"],"names":["Price","props","state","price","isNaN","nextProps","this","setState","toFixed","React","Component","getCaseOne","small","large","moves","push","take","direction","getCaseTwo","numberOfThings","nameOfThings","i","pop","getCaseThree","geese","corn","Moves","moveMaker","item","className","icon","faLeaf","faCrow","faMale","items","forEach","element","arrow","faArrowRight","faArrowLeft","convertItemToIcon","class","ferryPrice","App","priceOfFerry","bagsOfCorn","total","canTravel","number","tripCalculator","scarecrow","id","onClick","onChangeCornQuantity","onChangeGeeseQuantity","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e88265e4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Price.scss\";\n\nclass Price extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = { price: isNaN(props.price) ? 0 : props.price };\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.setState({ price: isNaN(nextProps.price) ? 0 : nextProps.price });\n\t}\n\n\trender() {\n\t\treturn <span>Â£{(this.state.price / 100).toFixed(2)}</span>;\n\t}\n}\n\nexport default Price;\n","const buildMoves = (geese, corn) => {\n\n    if (geese === 1 && corn === 2) {\n        return getCaseOne('goose', 'corn');\n    }\n\n    if (geese === 2 && corn === 1) {\n        return getCaseOne('corn', 'goose');\n    }\n\n    if (geese > 0 && corn === 0) {\n        return getCaseTwo(geese, 'goose');\n    }\n\n    if (geese === 0 && corn > 0) {\n        return getCaseTwo(corn, 'corn');\n    }\n\n    if (geese === 1 && corn === 1) {\n        return getCaseThree();\n    }\n\n    return [];\n}\n\nconst getCaseOne = (small, large) => {\n    const moves = [];\n\n    moves.push({ take: small, direction: 'away' });\n    moves.push({ take: null, direction: 'home' });\n    moves.push({ take: large, direction: 'away' });\n    moves.push({ take: small, direction: 'home' });\n    moves.push({ take: large, direction: 'away' });\n    moves.push({ take: null, direction: 'home' });\n    moves.push({ take: small, direction: 'away' });\n    return moves;\n}\n\nconst getCaseTwo = (numberOfThings, nameOfThings) => {\n    const moves = [];\n\n    for (let i = 0; i < numberOfThings; i++) {\n        moves.push({ take: nameOfThings, direction: 'away' });\n        moves.push({ take: null, direction: 'home' });\n    }\n\n    moves.pop();\n\n    return moves;\n}\n\nconst getCaseThree = () => {\n    const moves = [];\n\n    moves.push({ take: 'goose', direction: 'away' });\n    moves.push({ take: null, direction: 'home' });\n    moves.push({ take: 'corn', direction: 'away' });\n\n    return moves;\n}\n\n\nexport default { buildMoves };","import React from \"react\";\nimport \"./Trip.scss\";\nimport moveMaker from \"../../Services/GooseCornTripBuilder\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n\tfaArrowRight,\n\tfaArrowLeft,\n\tfaCrow,\n\tfaMale,\n\tfaLeaf,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass Moves extends React.Component {\n\tstate = { moves: [] };\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = { moves: moveMaker.buildMoves(props.geese, props.corn) };\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.setState({\n\t\t\tmoves: moveMaker.buildMoves(nextProps.geese, nextProps.corn),\n\t\t});\n\t}\n\n\tconvertItemToIcon(item) {\n\t\tswitch (item) {\n\t\t\tcase \"corn\":\n\t\t\t\treturn <FontAwesomeIcon className=\"corn\" icon={faLeaf} />;\n\t\t\tcase \"goose\":\n\t\t\t\treturn <FontAwesomeIcon icon={faCrow} />;\n\t\t}\n\t\treturn <FontAwesomeIcon icon={faMale} />;\n\t}\n\n\trender() {\n\t\tconst items = [];\n\n\t\tthis.state.moves.forEach((element) => {\n\t\t\tlet arrow = <FontAwesomeIcon icon={faArrowRight} />;\n\t\t\tif (element.direction === \"home\") {\n\t\t\t\tarrow = <FontAwesomeIcon icon={faArrowLeft} />;\n\t\t\t}\n\n\t\t\tlet take = element.take;\n\t\t\tif (!take) {\n\t\t\t\ttake = \"nothing\";\n\t\t\t}\n\n\t\t\ttake = this.convertItemToIcon(take);\n\n\t\t\titems.push(\n\t\t\t\t<tr>\n\t\t\t\t\t<td>{take}</td>\n\t\t\t\t\t<td>{arrow}</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Trips</h2>\n\t\t\t\t<table class=\"trips\">\n\t\t\t\t\t<tbody>{items}</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Moves;\n","const canTravel = (geese, corn) => {\n    if (geese === 0 || corn === 0) {\n        return true;\n    }\n\n    if (geese <= 2 && corn <= 1) {\n        return true;\n    }\n\n    if (geese <= 1 && corn <= 2) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default { canTravel };","const getTotalPrice = (ferryPrice, geese, corn) => {\n    if (geese + corn === 0) {\n        return 0;\n    }\n\n    const trips = ((geese + corn) * 2) - 1;\n    return trips * ferryPrice;\n}\n\nexport default { getTotalPrice };","import React from \"react\";\nimport \"./App.scss\";\nimport Price from \"./Components/Price/Price\";\nimport Trip from \"./Components/Trip/Trip\";\nimport scarecrow from \"./Services/Scarecrow\";\nimport tripCalculator from \"./Services/TripCalculator\";\n\nclass App extends React.Component {\n\tpriceOfFerry = 25;\n\n\tstate = {\n\t\tbagsOfCorn: 0,\n\t\tgeese: 0,\n\t\ttotal: 0,\n\t\tcanTravel: true,\n\t};\n\n\tonChangeCornQuantity(number) {\n\t\tlet bagsOfCorn = this.state.bagsOfCorn + number;\n\t\tif (bagsOfCorn < 0) bagsOfCorn = 0;\n\n\t\tthis.setState({\n\t\t\tbagsOfCorn,\n\t\t\ttotal: tripCalculator.getTotalPrice(\n\t\t\t\tthis.priceOfFerry,\n\t\t\t\tthis.state.geese,\n\t\t\t\tbagsOfCorn\n\t\t\t),\n\t\t\tcanTravel: scarecrow.canTravel(this.state.geese, bagsOfCorn),\n\t\t});\n\t}\n\n\tonChangeGeeseQuantity(number) {\n\t\tlet geese = this.state.geese + number;\n\t\tif (geese < 0) geese = 0;\n\n\t\tthis.setState({\n\t\t\tgeese,\n\t\t\ttotal: tripCalculator.getTotalPrice(\n\t\t\t\tthis.priceOfFerry,\n\t\t\t\tgeese,\n\t\t\t\tthis.state.bagsOfCorn\n\t\t\t),\n\t\t\tcanTravel: scarecrow.canTravel(geese, this.state.bagsOfCorn),\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t<h1>Ferry Trip Calculator</h1>\n\t\t\t\t<p>\n\t\t\t\t\tFerry Price: <Price price={25}></Price>\n\t\t\t\t</p>\n\n\t\t\t\t<div className=\"item-picker\">\n\t\t\t\t\t<h2>Corn</h2>\n\t\t\t\t\t<p id=\"bags-of-corn\">Bags of corn: {this.state.bagsOfCorn}</p>\n\t\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t\t<button id=\"corn-plus-one\" onClick={() => this.onChangeCornQuantity(1)}>+</button>\n\t\t\t\t\t\t<button onClick={() => this.onChangeCornQuantity(10)}>+10</button>\n\t\t\t\t\t\t<button onClick={() => this.onChangeCornQuantity(-10)}>-10</button>\n\t\t\t\t\t\t<button onClick={() => this.onChangeCornQuantity(-1)}>-</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"item-picker\">\n\t\t\t\t\t<h2>Geese</h2>\n\t\t\t\t\t<p id=\"geese\">Geese: {this.state.geese}</p>\n\t\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t\t<button id=\"goose-plus-one\" onClick={() => this.onChangeGeeseQuantity(1)}>+</button>\n\t\t\t\t\t\t<button onClick={() => this.onChangeGeeseQuantity(10)}>+10</button>\n\t\t\t\t\t\t<button onClick={() => this.onChangeGeeseQuantity(-10)}>-10</button>\n\t\t\t\t\t\t<button onClick={() => this.onChangeGeeseQuantity(-1)}>-</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{this.state.canTravel && <>\n\t\t\t\t\t<div id=\"total\">\n\t\t\t\t\t\tPrice for ferry: <Price price={this.state.total}></Price>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Trip geese={this.state.geese} corn={this.state.bagsOfCorn}></Trip>\n\t\t\t\t</>}\n\n\t\t\t\t{!this.state.canTravel && (\n\t\t\t\t\t<div className=\"error\">CANNOT DO FERRY TRIP</div>\n\t\t\t\t)}\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}